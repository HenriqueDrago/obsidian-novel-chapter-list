/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var b=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var O=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var H=(p,e)=>{for(var t in e)b(p,t,{get:e[t],enumerable:!0})},B=(p,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of O(e))!M.call(p,s)&&s!==t&&b(p,s,{get:()=>e[s],enumerable:!(n=$(e,s))||n.enumerable});return p};var R=p=>B(b({},"__esModule",{value:!0}),p);var U={};H(U,{default:()=>S});module.exports=R(U);var a=require("obsidian");var g=require("obsidian"),f={novelProjects:[{id:`default-${Date.now()}`,name:"My First Novel",path:"Novel/Chapters"}],propertyNameToChange:"status",propertyColumnHeader:"",propertyOptions:"To Do, Done, In Progress",chapterTemplatePath:""};function W(){return`novel-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}var E=class extends g.PluginSettingTab{constructor(e,t){super(e,t),this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Novel Chapter Plugin Settings"}),e.createEl("h3",{text:"Chapter Properties & Template"}),new g.Setting(e).setName("Target Property Name").setDesc('The actual frontmatter key to update (e.g., "status", "outlineLevel"). This is case-sensitive.').addText(n=>n.setPlaceholder(f.propertyNameToChange).setValue(this.plugin.settings.propertyNameToChange).onChange(async s=>{this.plugin.settings.propertyNameToChange=s.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new g.Setting(e).setName("Property Column Header Display Name").setDesc('What title to display for the property column in the view (e.g., "Current Status"). If empty, it will use the "Target Property Name".').addText(n=>n.setPlaceholder("e.g., Status (optional)").setValue(this.plugin.settings.propertyColumnHeader).onChange(async s=>{this.plugin.settings.propertyColumnHeader=s.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new g.Setting(e).setName("Property Options").setDesc('Enter a comma-separated list of options for the dropdown (e.g., "To Do,In Progress,Complete").').addText(n=>n.setPlaceholder(f.propertyOptions).setValue(this.plugin.settings.propertyOptions).onChange(async s=>{this.plugin.settings.propertyOptions=s,await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new g.Setting(e).setName("Chapter Template File Path").setDesc('Path to a markdown file to use as a template for new chapters (e.g., "Templates/ChapterTemplate.md"). Leave empty to not use a template. Placeholders like {{title}} and {{date}} can be used in the template.').addText(n=>n.setPlaceholder(f.chapterTemplatePath||"e.g., Templates/ChapterTemplate.md").setValue(this.plugin.settings.chapterTemplatePath).onChange(async s=>{this.plugin.settings.chapterTemplatePath=s.trim(),await this.plugin.saveSettings()})),e.createEl("hr"),e.createEl("h3",{text:"Novel Projects"});let t=e.createDiv({cls:"novel-projects-container"});this.renderNovelProjects(t),new g.Setting(e).setName("Add New Novel Project").setDesc("Add a new novel to track.").addButton(n=>n.setButtonText("Add Novel").setCta().onClick(async()=>{this.plugin.settings.novelProjects.push({id:W(),name:`New Novel ${this.plugin.settings.novelProjects.length+1}`,path:""}),await this.plugin.saveSettings(),this.renderNovelProjects(t),this.plugin.refreshNovelChapterView(!0)}))}renderNovelProjects(e){e.empty(),this.plugin.settings.novelProjects.length===0&&e.createEl("p",{text:"No novel projects configured. Add one below."}),this.plugin.settings.novelProjects.forEach((t,n)=>{let s=new g.Setting(e).setName(`Novel ${n+1}`).setDesc(`Configuration for ${t.name||"this novel"}.`);s.addText(r=>r.setPlaceholder("Novel Name (e.g., My Epic Saga)").setValue(t.name).onChange(async c=>{t.name=c.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView(!0)})),s.addText(r=>r.setPlaceholder("Folder Path (e.g., Novels/MyEpicSaga/Chapters)").setValue(t.path).onChange(async c=>{t.path=c.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView(!0)})),s.addButton(r=>r.setIcon("trash").setTooltip("Remove this novel project").onClick(async()=>{this.plugin.settings.novelProjects.splice(n,1),await this.plugin.saveSettings(),this.renderNovelProjects(e),this.plugin.refreshNovelChapterView(!0)}))})}};var T="novel-chapter-view",_={...f,lastSelectedNovelId:null,novelProjects:Array.isArray(f.novelProjects)&&f.novelProjects.length>0?f.novelProjects:[{id:`default-${Date.now()}`,name:"My First Novel",path:"Novel/Chapters"}]};function k(p,e){if(!e||e.trim()==="")return!1;let t=(0,a.normalizePath)(p.path),n=(0,a.normalizePath)(e);return n.endsWith("/")||(n+="/"),t.startsWith(n)}var z=p=>new Promise(e=>setTimeout(e,p)),D=class extends a.Modal{constructor(t,n,s){super(t);this.message=n;this.onConfirm=s}onOpen(){let{contentEl:t}=this;t.empty(),t.addClass("confirm-modal"),t.createEl("p",{text:this.message});let n=t.createDiv({cls:"modal-button-container"});new a.ButtonComponent(n).setButtonText("Confirm").setWarning().onClick(()=>{this.onConfirm(),this.close()}),new a.ButtonComponent(n).setButtonText("Cancel").onClick(()=>{this.close()})}onClose(){this.contentEl.empty()}},x=class extends a.Modal{constructor(t,n,s,r,c){super(t);this.result=null;this.modalTitle=n,this.ctaButtonText=s,this.initialValue=r,this.onSubmit=c}onOpen(){let{contentEl:t}=this;t.empty(),t.createEl("h2",{text:this.modalTitle});let n=t.createDiv({cls:"modal-input-container"}),s=new a.TextComponent(n).setPlaceholder("Chapter name").setValue(this.initialValue);s.inputEl.addClass("modal-text-input"),s.inputEl.focus();let r=t.createDiv({cls:"modal-button-container"}),c=new a.ButtonComponent(r).setButtonText(this.ctaButtonText).setCta(),d=()=>{let i=s.getValue().trim();i?(this.result=i,this.close(),this.onSubmit(this.result)):new a.Notice("Chapter name cannot be empty.")};c.onClick(d),new a.ButtonComponent(r).setButtonText("Cancel").onClick(()=>this.close()),s.inputEl.addEventListener("keypress",i=>{i.key==="Enter"&&(i.preventDefault(),d())})}onClose(){this.contentEl.empty()}},F=class extends a.ItemView{constructor(t,n){super(t);this.selectedNovelProjectId=null;this.searchTerm="";this.filterValue="all";this.plugin=n}getViewType(){return T}getDisplayText(){let t=this.plugin.settings.novelProjects.find(n=>n.id===this.selectedNovelProjectId);return t?`Chapters: ${t.name}`:"Novel Chapters"}getIcon(){return"list-ordered"}async onOpen(){let t=this.containerEl.children[1];t.empty(),t.addClass("novel-chapter-view-container"),this.controlsContainer=t.createDiv({cls:"novel-chapter-controls"}),this.tableContainer=t.createDiv({cls:"novel-chapter-table-container"}),await this.updateView(!0)}async onClose(){}async updateView(t=!1){if(t&&await this.renderControls(),!this.selectedNovelProjectId||!this.plugin.settings.novelProjects.find(n=>n.id===this.selectedNovelProjectId)){this.plugin.settings.lastSelectedNovelId&&this.plugin.settings.novelProjects.find(s=>s.id===this.plugin.settings.lastSelectedNovelId)?this.selectedNovelProjectId=this.plugin.settings.lastSelectedNovelId:this.plugin.settings.novelProjects.length>0?this.selectedNovelProjectId=this.plugin.settings.novelProjects[0].id:this.selectedNovelProjectId=null;let n=this.controlsContainer.querySelector("select.novel-project-selector");n&&this.selectedNovelProjectId?n.value=this.selectedNovelProjectId:n&&!this.selectedNovelProjectId&&this.plugin.settings.novelProjects.length>0&&(n.value=this.plugin.settings.novelProjects[0].id)}this.updateLeafDisplayText(),await this.renderChapterTable()}updateLeafDisplayText(){this.leaf&&this.leaf.setViewState(this.leaf.getViewState())}async renderControls(){this.controlsContainer.empty();let t=this.plugin.settings.novelProjects;if(t.length===0){this.controlsContainer.setText("No novel projects configured. Please add one in plugin settings."),this.selectedNovelProjectId=null;return}let n=this.controlsContainer.createDiv({cls:"novel-chapter-controls-line"}),s=this.controlsContainer.createDiv({cls:"novel-chapter-controls-line"}),r=n.createEl("select");r.addClass("novel-project-selector"),t.forEach(i=>{r.createEl("option",{text:i.name||"Unnamed Novel",value:i.id})}),this.selectedNovelProjectId&&t.find(i=>i.id===this.selectedNovelProjectId)?r.value=this.selectedNovelProjectId:t.length>0&&(this.selectedNovelProjectId=t[0].id,r.value=this.selectedNovelProjectId),r.addEventListener("change",async i=>{this.selectedNovelProjectId=i.target.value,this.plugin.settings.lastSelectedNovelId=this.selectedNovelProjectId,await this.plugin.saveSettings(),this.updateLeafDisplayText(),await this.renderChapterTable()}),new a.ButtonComponent(n).setIcon("chevron-left").setTooltip("Previous Chapter").onClick(()=>{let i=this.app.workspace.getActiveFile();if(!i){new a.Notice("Open a chapter file to use navigation.");return}let o=this.plugin.findProjectForFile(i);if(!o||o.id!==this.selectedNovelProjectId){new a.Notice("The active chapter doesn't belong to the selected project.");return}let u=this.plugin.getProjectChapters(o.path),h=u.findIndex(v=>v.path===i.path);h>0?this.app.workspace.openLinkText(u[h-1].path,"",!1):new a.Notice("This is the first chapter.")}),new a.ButtonComponent(n).setIcon("chevron-right").setTooltip("Next Chapter").onClick(()=>{let i=this.app.workspace.getActiveFile();if(!i){new a.Notice("Open a chapter file to use navigation.");return}let o=this.plugin.findProjectForFile(i);if(!o||o.id!==this.selectedNovelProjectId){new a.Notice("The active chapter doesn't belong to the selected project.");return}let u=this.plugin.getProjectChapters(o.path),h=u.findIndex(v=>v.path===i.path);h!==-1&&h<u.length-1?this.app.workspace.openLinkText(u[h+1].path,"",!1):new a.Notice("This is the last chapter.")}),new a.ButtonComponent(n).setIcon("plus").setTooltip("New Chapter").setClass("novel-chapter-new-button").onClick(async()=>{await this.plugin.promptAndCreateNewChapter(this.selectedNovelProjectId)}),new a.TextComponent(s).setPlaceholder("Search chapters...").setValue(this.searchTerm).onChange(i=>{this.searchTerm=i,this.renderChapterTable()}).inputEl.addClass("novel-chapter-search-input");let{propertyOptions:c}=this.plugin.settings,d=c.split(",").map(i=>i.trim()).filter(i=>i.length>0);if(d.length>0){let i=s.createEl("select");i.addClass("novel-chapter-filter-select"),i.createEl("option",{text:"Filter by property...",value:"all"}),d.forEach(o=>{i.createEl("option",{text:o,value:o})}),i.value=this.filterValue,i.addEventListener("change",o=>{this.filterValue=o.target.value,this.renderChapterTable()})}}async renderChapterTable(){var w;if(this.tableContainer.empty(),!this.selectedNovelProjectId)return;let t=this.plugin.settings.novelProjects.find(l=>l.id===this.selectedNovelProjectId);if(!t){this.tableContainer.setText("Selected novel project not found.");return}let{path:n}=t,{propertyNameToChange:s,propertyColumnHeader:r,propertyOptions:c}=this.plugin.settings,d=c.split(",").map(l=>l.trim()).filter(l=>l.length>0);if(!n||n.trim()===""){this.tableContainer.setText(`Project "${t.name}" has no folder path configured.`);return}let o=this.app.vault.getMarkdownFiles().filter(l=>k(l,n));if(this.filterValue!=="all"&&(o=o.filter(l=>{var N;let m=this.app.metadataCache.getFileCache(l);return((N=m==null?void 0:m.frontmatter)==null?void 0:N[s])===this.filterValue})),this.searchTerm&&(o=o.filter(l=>l.basename.toLowerCase().includes(this.searchTerm.toLowerCase()))),o.sort((l,m)=>l.path.localeCompare(m.path)),o.length===0){this.tableContainer.setText(`No chapters found in "${n}" matching your criteria.`);return}let u=this.tableContainer.createEl("table",{cls:"novel-chapter-table"}),h=u.createEl("thead").createEl("tr");if(h.createEl("th",{text:`Chapter (${o.length})`}),s&&d.length>0){let l=r.trim()||s;h.createEl("th",{text:l})}let v=u.createEl("tbody");for(let l of o){let m=v.createEl("tr"),N=m.createEl("td").createEl("a",{text:l.basename,href:"#",cls:"internal-link"});if(N.addEventListener("click",y=>{y.preventDefault(),this.app.workspace.openLinkText(l.path,"",!1)}),N.addEventListener("contextmenu",y=>{y.preventDefault();let C=new a.Menu;C.addItem(P=>P.setTitle("Rename").setIcon("pencil").onClick(()=>{this.plugin.promptAndRenameChapter(l)})),C.addItem(P=>P.setTitle("Delete").setIcon("trash").onClick(()=>{this.plugin.promptAndDeleteChapter(l)})),C.showAtMouseEvent(y)}),s&&d.length>0){let C=m.createEl("td").createEl("select"),P=this.app.metadataCache.getFileCache(l),V=((w=P==null?void 0:P.frontmatter)==null?void 0:w[s])||"",A=C.createEl("option",{text:"--- Select ---",value:""});V||(A.selected=!0),d.forEach(j=>{let I=C.createEl("option",{text:j,value:j});j===V&&(I.selected=!0)}),C.addEventListener("change",async j=>{let I=j.target.value;await this.plugin.updateChapterProperty(l,s,I)})}}}},S=class extends a.Plugin{getProjectChapters(e){if(!e||e.trim()==="")return[];let n=this.app.vault.getMarkdownFiles().filter(s=>k(s,e));return n.sort((s,r)=>s.path.localeCompare(r.path)),n}findProjectForFile(e){return e&&this.settings.novelProjects.find(t=>t.path&&k(e,t.path))||null}async updateChapterProperty(e,t,n){try{await this.app.fileManager.processFrontMatter(e,s=>{n===""?delete s[t]:s[t]=n}),new a.Notice(`Chapter '${e.basename}' ${t} updated.`)}catch(s){console.error(`Error updating frontmatter for ${e.path}:`,s),new a.Notice(`Failed to update ${t} for ${e.basename}.`)}}async promptAndRenameChapter(e){let t=e.basename;new x(this.app,"Rename Chapter","Rename",t,async n=>{n&&n!==t&&await this.renameChapter(e,n)}).open()}async renameChapter(e,t){let n=t.replace(/[\\/:*?"<>|]/g,"").trim();if(n===""){new a.Notice("Invalid chapter name provided.");return}if(!e.parent){new a.Notice("Cannot rename file: No parent folder found."),console.error("Could not find parent for file:",e.path);return}let s=`${e.parent.path}/${n}.md`;if(await this.app.vault.adapter.exists((0,a.normalizePath)(s))){new a.Notice(`A chapter named "${n}.md" already exists.`);return}try{await this.app.fileManager.renameFile(e,s),new a.Notice(`Chapter renamed to "${n}".`)}catch(r){console.error("Error renaming file:",r),new a.Notice("Failed to rename chapter. See console for details.")}}async promptAndDeleteChapter(e){new D(this.app,`Are you sure you want to delete "${e.basename}"? This will move the file to the trash.`,async()=>await this.deleteChapter(e)).open()}async deleteChapter(e){try{await this.app.vault.trash(e,!0),new a.Notice(`Chapter "${e.basename}" moved to trash.`)}catch(t){console.error("Error deleting file:",t),new a.Notice("Failed to delete chapter. See console for details.")}}async promptAndCreateNewChapter(e){var n;if(!e){new a.Notice("Please select a novel project first.");return}let t=this.settings.novelProjects.find(s=>s.id===e);if(!t||!((n=t.path)!=null&&n.trim())){new a.Notice("The selected project does not have a valid folder path configured.");return}new x(this.app,"Enter New Chapter Name","Create Chapter","",async s=>{var u;let r=s.replace(/[\\/:*?"<>|]/g,"").trim();if(r===""){new a.Notice("Invalid chapter name.");return}let c=(0,a.normalizePath)(t.path);if(!await this.app.vault.adapter.exists(c)){new a.Notice(`Project folder "${c}" does not exist.`);return}let d=(0,a.normalizePath)(`${c}/${r}.md`);if(await this.app.vault.adapter.exists(d)){new a.Notice(`A chapter named "${r}.md" already exists.`);return}let i="",o=(u=this.settings.chapterTemplatePath)==null?void 0:u.trim();if(o){let h=(0,a.normalizePath)(o),v=this.app.vault.getAbstractFileByPath(h);if(v instanceof a.TFile){i=await this.app.vault.read(v);let w=new Date,l=`${w.getFullYear()}-${String(w.getMonth()+1).padStart(2,"0")}-${String(w.getDate()).padStart(2,"0")}`;i=i.replace(/\{\{title\}\}/gi,s),i=i.replace(/\{\{date\}\}/gi,l)}else new a.Notice(`Template file not found at "${o}". Creating a default chapter.`)}if(i===""){let{propertyNameToChange:h}=this.settings;i=`---
title: ${s}
`,h&&(i+=`${h}: ""
`),i+=`---

# ${s}

`}try{await this.app.vault.create(d,i),new a.Notice(`Chapter "${s}" created successfully.`)}catch(h){console.error("Error creating new chapter:",h),new a.Notice("Failed to create new chapter. Check console for details.")}}).open()}async onload(){console.log("Novel Chapter Plugin loaded"),await this.loadSettings(),this.addSettingTab(new E(this.app,this)),this.registerView(T,e=>new F(e,this)),this.addCommand({id:"open-novel-chapter-view",name:"Open Novel Chapter View",callback:()=>this.activateView()}),this.addCommand({id:"add-new-chapter-to-project",name:"Novel Chapters: Create New Chapter in Project",callback:()=>{let e=this.settings.lastSelectedNovelId;if(!e&&this.settings.novelProjects.length===1&&(e=this.settings.novelProjects[0].id),!e){new a.Notice("Cannot determine project. Please select a project in the Novel Chapters view.");return}this.promptAndCreateNewChapter(e)}}),this.addCommand({id:"open-next-chapter-in-project",name:"Novel Chapters: Open Next Chapter",checkCallback:e=>{let t=this.app.workspace.getActiveFile();if(!t)return!1;let n=this.findProjectForFile(t);if(!n)return!1;if(e)return!0;let s=this.getProjectChapters(n.path),r=s.findIndex(c=>c.path===t.path);r!==-1&&r<s.length-1?this.app.workspace.openLinkText(s[r+1].path,"",!1):new a.Notice("This is the last chapter.")}}),this.addCommand({id:"open-previous-chapter-in-project",name:"Novel Chapters: Open Previous Chapter",checkCallback:e=>{let t=this.app.workspace.getActiveFile();if(!t)return!1;let n=this.findProjectForFile(t);if(!n)return!1;if(e)return!0;let s=this.getProjectChapters(n.path),r=s.findIndex(c=>c.path===t.path);r>0?this.app.workspace.openLinkText(s[r-1].path,"",!1):new a.Notice("This is the first chapter.")}}),this.addRibbonIcon("list-ordered","Open Novel Chapter View",()=>this.activateView()),this.registerEvent(this.app.vault.on("create",e=>this.handleFileChange(e))),this.registerEvent(this.app.vault.on("modify",e=>this.handleFileChange(e))),this.registerEvent(this.app.vault.on("delete",e=>this.handleFileChange(e))),this.registerEvent(this.app.vault.on("rename",(e,t)=>this.handleFileChange(e,t)))}onunload(){console.log("Novel Chapter Plugin unloaded"),this.app.workspace.detachLeavesOfType(T)}async loadSettings(){this.settings=Object.assign({},_,await this.loadData()),(!Array.isArray(this.settings.novelProjects)||this.settings.novelProjects.length===0)&&(this.settings.novelProjects=[{id:`default-load-${Date.now()}`,name:"Default Novel",path:""}]),this.settings.novelProjects=this.settings.novelProjects.map(e=>({id:e.id||`generated-${Date.now()}`,name:e.name||"Unnamed Novel",path:e.path||""})),this.settings.lastSelectedNovelId&&!this.settings.novelProjects.find(e=>e.id===this.settings.lastSelectedNovelId)&&(this.settings.lastSelectedNovelId=this.settings.novelProjects.length>0?this.settings.novelProjects[0].id:null)}async saveSettings(){await this.saveData(this.settings),this.refreshNovelChapterView(!0)}refreshNovelChapterView(e=!1){this.app.workspace.getLeavesOfType(T).forEach(t=>{t.view instanceof F&&t.view.updateView(e)})}async handleFileChange(e,t){if(!(e instanceof a.TFile)||e.extension!=="md")return;this.settings.novelProjects.some(s=>{if(!s.path)return!1;let r=(0,a.normalizePath)(s.path),c=(0,a.normalizePath)(e.path).startsWith(r+"/"),d=t?(0,a.normalizePath)(t).startsWith(r+"/"):!1;return c||d})&&(await z(150),this.refreshNovelChapterView(!1))}async activateView(){var n;let{workspace:e}=this.app,t=e.getLeavesOfType(T)[0];t||(t=(n=e.getRightLeaf(!1))!=null?n:e.getLeaf("split","vertical"),await t.setViewState({type:T,active:!0})),e.revealLeaf(t)}};
