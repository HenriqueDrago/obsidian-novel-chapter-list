/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var F=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var O=Object.prototype.hasOwnProperty;var M=(p,t)=>{for(var e in t)F(p,e,{get:t[e],enumerable:!0})},H=(p,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of $(t))!O.call(p,s)&&s!==e&&F(p,s,{get:()=>t[s],enumerable:!(n=V(t,s))||n.enumerable});return p};var z=p=>H(F({},"__esModule",{value:!0}),p);var U={};M(U,{default:()=>E});module.exports=z(U);var o=require("obsidian");var v=require("obsidian"),g={novelProjects:[{id:`default-${Date.now()}`,name:"My First Novel",path:"Novel/Chapters"}],propertyNameToChange:"status",propertyColumnHeader:"",propertyOptions:"To Do,In Progress,Drafted,Revised,Done",chapterTemplatePath:""};function W(){return`novel-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}var j=class extends v.PluginSettingTab{constructor(t,e){super(t,e),this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Novel Chapter Plugin Settings"}),t.createEl("h3",{text:"Chapter Properties & Template"}),new v.Setting(t).setName("Target Property Name").setDesc('The actual frontmatter key to update (e.g., "status", "outlineLevel"). This is case-sensitive.').addText(n=>n.setPlaceholder(g.propertyNameToChange).setValue(this.plugin.settings.propertyNameToChange).onChange(async s=>{this.plugin.settings.propertyNameToChange=s.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new v.Setting(t).setName("Property Column Header Display Name").setDesc('What title to display for the property column in the view (e.g., "Current Status"). If empty, it will use the "Target Property Name".').addText(n=>n.setPlaceholder("e.g., Status (optional)").setValue(this.plugin.settings.propertyColumnHeader).onChange(async s=>{this.plugin.settings.propertyColumnHeader=s.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new v.Setting(t).setName("Property Options").setDesc('Enter a comma-separated list of options for the dropdown (e.g., "To Do,In Progress,Complete").').addText(n=>n.setPlaceholder(g.propertyOptions).setValue(this.plugin.settings.propertyOptions).onChange(async s=>{this.plugin.settings.propertyOptions=s,await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new v.Setting(t).setName("Chapter Template File Path").setDesc('Path to a markdown file to use as a template for new chapters (e.g., "Templates/ChapterTemplate.md"). Leave empty to not use a template. Placeholders like {{title}} and {{date}} can be used in the template.').addText(n=>n.setPlaceholder(g.chapterTemplatePath||"e.g., Templates/ChapterTemplate.md").setValue(this.plugin.settings.chapterTemplatePath).onChange(async s=>{this.plugin.settings.chapterTemplatePath=s.trim(),await this.plugin.saveSettings()})),t.createEl("hr"),t.createEl("h3",{text:"Novel Projects"});let e=t.createDiv({cls:"novel-projects-container"});this.renderNovelProjects(e),new v.Setting(t).setName("Add New Novel Project").setDesc("Add a new novel to track.").addButton(n=>n.setButtonText("Add Novel").setCta().onClick(async()=>{this.plugin.settings.novelProjects.push({id:W(),name:`New Novel ${this.plugin.settings.novelProjects.length+1}`,path:""}),await this.plugin.saveSettings(),this.renderNovelProjects(e),this.plugin.refreshNovelChapterView(!0)}))}renderNovelProjects(t){t.empty(),this.plugin.settings.novelProjects.length===0&&t.createEl("p",{text:"No novel projects configured. Add one below."}),this.plugin.settings.novelProjects.forEach((e,n)=>{let s=new v.Setting(t).setName(`Novel ${n+1}`).setDesc(`Configuration for ${e.name||"this novel"}.`);s.addText(a=>a.setPlaceholder("Novel Name (e.g., My Epic Saga)").setValue(e.name).onChange(async i=>{e.name=i.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView(!0)})),s.addText(a=>a.setPlaceholder("Folder Path (e.g., Novels/MyEpicSaga/Chapters)").setValue(e.path).onChange(async i=>{e.path=i.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView(!0)})),s.addButton(a=>a.setIcon("trash").setTooltip("Remove this novel project").onClick(async()=>{this.plugin.settings.novelProjects.splice(n,1),await this.plugin.saveSettings(),this.renderNovelProjects(t),this.plugin.refreshNovelChapterView(!0)}))})}};var C="novel-chapter-view",R={...g,lastSelectedNovelId:null,novelProjects:Array.isArray(g.novelProjects)&&g.novelProjects.length>0?g.novelProjects:[{id:`default-${Date.now()}`,name:"My First Novel",path:"Novel/Chapters"}]};function b(p,t){if(!t||t.trim()==="")return!1;let e=(0,o.normalizePath)(p.path),n=(0,o.normalizePath)(t);return n.endsWith("/")||(n+="/"),e.startsWith(n)}var B=p=>new Promise(t=>setTimeout(t,p)),k=class extends o.Modal{constructor(e,n){super(e);this.result=null;this.onSubmit=n}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"Enter New Chapter Name"});let n=e.createDiv({cls:"modal-input-container"}),s=new o.TextComponent(n).setPlaceholder("Chapter name");s.inputEl.addClass("modal-text-input"),s.inputEl.focus();let a=e.createDiv({cls:"modal-button-container"});new o.ButtonComponent(a).setButtonText("Create Chapter").setCta().onClick(()=>{let i=s.getValue().trim();i?(this.result=i,this.close(),this.onSubmit(this.result)):new o.Notice("Chapter name cannot be empty.")}),new o.ButtonComponent(a).setButtonText("Cancel").onClick(()=>{this.close()}),s.inputEl.addEventListener("keypress",i=>{if(i.key==="Enter"){i.preventDefault();let h=s.getValue().trim();h?(this.result=h,this.close(),this.onSubmit(this.result)):new o.Notice("Chapter name cannot be empty.")}})}onClose(){let{contentEl:e}=this;e.empty()}},T=class extends o.ItemView{constructor(e,n){super(e);this.selectedNovelProjectId=null;this.plugin=n}getViewType(){return C}getDisplayText(){let e=this.plugin.settings.novelProjects.find(n=>n.id===this.selectedNovelProjectId);return e?`Chapters: ${e.name}`:"Novel Chapters"}getIcon(){return"list-ordered"}async onOpen(){let e=this.containerEl.children[1];e.empty(),e.addClass("novel-chapter-view-container"),this.controlsContainer=e.createDiv({cls:"novel-chapter-controls"}),this.tableContainer=e.createDiv({cls:"novel-chapter-table-container"}),await this.updateView(!0)}async onClose(){}async updateView(e=!1){if(e&&await this.renderControls(),!this.selectedNovelProjectId||!this.plugin.settings.novelProjects.find(n=>n.id===this.selectedNovelProjectId)){this.plugin.settings.lastSelectedNovelId&&this.plugin.settings.novelProjects.find(s=>s.id===this.plugin.settings.lastSelectedNovelId)?this.selectedNovelProjectId=this.plugin.settings.lastSelectedNovelId:this.plugin.settings.novelProjects.length>0?this.selectedNovelProjectId=this.plugin.settings.novelProjects[0].id:this.selectedNovelProjectId=null;let n=this.controlsContainer.querySelector("select.novel-project-selector");n&&this.selectedNovelProjectId?n.value=this.selectedNovelProjectId:n&&!this.selectedNovelProjectId&&this.plugin.settings.novelProjects.length>0&&(n.value=this.plugin.settings.novelProjects[0].id)}this.updateLeafDisplayText(),await this.renderChapterTable()}updateLeafDisplayText(){this.leaf&&this.leaf.setViewState(this.leaf.getViewState())}async renderControls(){this.controlsContainer.empty();let e=this.plugin.settings.novelProjects;if(e.length===0){this.controlsContainer.setText("No novel projects configured. Please add one in plugin settings."),this.selectedNovelProjectId=null;return}let n=this.controlsContainer.createDiv({cls:"novel-chapter-controls-line"}),s=n.createEl("select");s.addClass("novel-project-selector"),e.forEach(i=>{s.createEl("option",{text:i.name||"Unnamed Novel",value:i.id})}),this.selectedNovelProjectId&&e.find(i=>i.id===this.selectedNovelProjectId)?s.value=this.selectedNovelProjectId:e.length>0&&(this.selectedNovelProjectId=e[0].id,s.value=this.selectedNovelProjectId),s.addEventListener("change",async i=>{this.selectedNovelProjectId=i.target.value,this.plugin.settings.lastSelectedNovelId=this.selectedNovelProjectId,await this.plugin.saveSettings(),this.updateLeafDisplayText(),await this.renderChapterTable()}),n.createEl("button",{text:"+ New Chapter",cls:"novel-chapter-new-button"}).addEventListener("click",async()=>{await this.plugin.promptAndCreateNewChapter(this.selectedNovelProjectId)})}async renderChapterTable(){var w;if(this.tableContainer.empty(),!this.selectedNovelProjectId)return;let e=this.plugin.settings.novelProjects.find(r=>r.id===this.selectedNovelProjectId);if(!e){this.tableContainer.setText("Selected novel project not found. It might have been deleted.");return}let{path:n}=e,{propertyNameToChange:s,propertyColumnHeader:a,propertyOptions:i}=this.plugin.settings,h=i.split(",").map(r=>r.trim()).filter(r=>r.length>0);if(!n||n.trim()===""){this.tableContainer.setText(`The selected novel project "${e.name||"Unnamed Novel"}" does not have a folder path configured.`);return}let d=this.app.vault.getMarkdownFiles().filter(r=>b(r,n));if(d.length===0){this.tableContainer.setText(`No chapters found in "${n}" for novel "${e.name||"Unnamed Novel"}".`);return}d.sort((r,f)=>r.path.localeCompare(f.path));let c=this.tableContainer.createEl("table",{cls:"novel-chapter-table"}),u=c.createEl("thead").createEl("tr");if(u.createEl("th",{text:`Chapter (${d.length})`}),s&&h.length>0){let r=a&&a.trim()!==""?a:s;u.createEl("th",{text:r})}let P=c.createEl("tbody");for(let r of d){let f=P.createEl("tr");if(f.createEl("td").createEl("a",{text:r.basename,href:"#",cls:"internal-link"}).addEventListener("click",D=>{D.preventDefault(),this.app.workspace.openLinkText(r.path,"",!1)}),s&&h.length>0){let x=f.createEl("td").createEl("select"),I=this.app.metadataCache.getFileCache(r),A=((w=I==null?void 0:I.frontmatter)==null?void 0:w[s])||"",L=x.createEl("option",{text:"--- Select ---",value:""});A||(L.selected=!0),h.forEach(N=>{let m=x.createEl("option",{text:N,value:N});N===A&&(m.selected=!0)}),x.addEventListener("change",async N=>{let m=N.target.value;try{await this.app.fileManager.processFrontMatter(r,y=>{m===""?delete y[s]:y[s]=m}),new o.Notice(`Chapter '${r.basename}' ${s} updated to '${m===""?"cleared":m}'.`)}catch(y){console.error(`Error updating frontmatter for ${r.path}:`,y),new o.Notice(`Failed to update ${s} for ${r.basename}.`)}})}}}},E=class extends o.Plugin{getProjectChapters(t){if(!t||t.trim()==="")return[];let n=this.app.vault.getMarkdownFiles().filter(s=>b(s,t));return n.sort((s,a)=>s.path.localeCompare(a.path)),n}findProjectForFile(t){if(!t)return null;for(let e of this.settings.novelProjects)if(e.path&&b(t,e.path))return e;return null}async promptAndCreateNewChapter(t){if(console.log("promptAndCreateNewChapter called with projectId:",t),!t){console.log("No project ID provided. Aborting chapter creation."),new o.Notice("Please select a novel project first (e.g., in the Novel Chapters view).");return}let e=this.settings.novelProjects.find(n=>n.id===t);if(!e||!e.path||e.path.trim()===""){console.log("Target novel project is invalid or has no path. Aborting.",e),new o.Notice("The target novel project does not have a valid folder path configured.");return}console.log("Target Novel Project for new chapter:",e),new k(this.app,async n=>{if(console.log("Chapter name from modal for plugin method:",n),!n||n.trim()===""){console.log("Chapter name is empty after modal. Aborting.");return}let s=n.replace(/[\\/:*?"<>|]/g,"").trim();if(console.log("Sanitized file name:",s),s===""){console.log("Sanitized file name is empty. Aborting."),new o.Notice("Invalid chapter name (results in empty filename after sanitization).");return}let a=(0,o.normalizePath)(e.path);console.log("Normalized folder path:",a);try{let c=await this.app.vault.adapter.exists(a);if(console.log("Does folder exist?",c),!c){console.log("Folder does not exist. Aborting."),new o.Notice(`Novel project folder "${a}" does not exist. Please create it or check settings.`);return}}catch(c){console.error("Error checking project folder:",c),new o.Notice(`Error checking project folder: ${c.message}`);return}let i=(0,o.normalizePath)(`${a}/${s}.md`);console.log("Full file path for new chapter:",i);let h=await this.app.vault.adapter.exists(i);if(console.log("Does file already exist?",h),h){console.log("File already exists. Aborting."),new o.Notice(`A chapter named "${s}.md" already exists in this novel.`);return}let l="",d=this.settings.chapterTemplatePath;if(console.log("Chapter template path from settings:",d),d&&d.trim()!==""){let c=(0,o.normalizePath)(d);console.log("Normalized template path:",c);try{let u=this.app.vault.getAbstractFileByPath(c);if(u instanceof o.TFile){console.log("Template file found:",u.path),l=await this.app.vault.read(u),console.log("Raw template content read."),l=l.replace(/\{\{title\}\}/gi,n),l=l.replace(/\{\{TITLE\}\}/gi,n);let P=new Date,w=P.getFullYear(),r=String(P.getMonth()+1).padStart(2,"0"),f=String(P.getDate()).padStart(2,"0"),S=`${w}-${r}-${f}`;l=l.replace(/\{\{date\}\}/gi,S),l=l.replace(/\{\{DATE\}\}/gi,S),console.log("Template content after placeholder replacement.")}else console.log("Template file not found or is not a TFile at path:",c),new o.Notice(`Chapter template file not found at "${c}". Creating a default chapter.`)}catch(u){console.error("Error reading chapter template:",u),new o.Notice("Error reading template. Creating a default chapter. Check console.")}}if(l===""){console.log("No template content, creating default chapter content.");let{propertyNameToChange:c}=this.settings,u="";l=`---
`,l+=`title: ${n}
`,c&&(l+=`${c}: "${u}"
`),l+=`---

# ${n}

`}console.log("Final content for new file:",l);try{console.log("Attempting to create file..."),await this.app.vault.create(i,l),console.log("File creation successful."),new o.Notice(`Chapter "${n}" created successfully.`)}catch(c){console.error("Error creating new chapter in vault.create:",c),new o.Notice("Failed to create new chapter. Check console for details.")}console.log("Async operation inside modal callback finished.")}).open(),console.log("promptAndCreateNewChapter finished (modal has been opened).")}async onload(){console.log("Novel Chapter Plugin loaded"),await this.loadSettings(),this.addSettingTab(new j(this.app,this)),this.registerView(C,t=>new T(t,this)),this.addCommand({id:"open-novel-chapter-view",name:"Open Novel Chapter View",callback:()=>this.activateView()}),this.addCommand({id:"add-new-chapter-to-project",name:"Novel Chapters: Create New Chapter in Project",callback:()=>{let t=this.settings.lastSelectedNovelId;if(!t&&this.settings.novelProjects.length===1&&(t=this.settings.novelProjects[0].id),!t&&this.settings.novelProjects.length>1){new o.Notice("Multiple novel projects exist. Please open the Novel Chapters view to select a project first, or ensure one was recently active.");return}if(!t&&this.settings.novelProjects.length===0){new o.Notice("No novel projects configured. Please add one in plugin settings.");return}this.promptAndCreateNewChapter(t)}}),this.addCommand({id:"open-next-chapter-in-project",name:"Novel Chapters: Open Next Chapter in Current Project",checkCallback:t=>{let e=this.app.workspace.getActiveFile();if(!e)return!1;let n=this.findProjectForFile(e);if(!n)return!1;if(t)return!0;let s=this.getProjectChapters(n.path),a=s.findIndex(i=>i.path===e.path);return a!==-1&&a<s.length-1?this.app.workspace.openLinkText(s[a+1].path,"",!1):a===s.length-1?new o.Notice("This is the last chapter in the project."):new o.Notice("Could not determine current chapter position."),!0}}),this.addCommand({id:"open-previous-chapter-in-project",name:"Novel Chapters: Open Previous Chapter in Current Project",checkCallback:t=>{let e=this.app.workspace.getActiveFile();if(!e)return!1;let n=this.findProjectForFile(e);if(!n)return!1;if(t)return!0;let s=this.getProjectChapters(n.path),a=s.findIndex(i=>i.path===e.path);return a!==-1&&a>0?this.app.workspace.openLinkText(s[a-1].path,"",!1):a===0?new o.Notice("This is the first chapter in the project."):new o.Notice("Could not determine current chapter position."),!0}}),this.addRibbonIcon(this.getIcon(),"Open Novel Chapter View",()=>this.activateView()),this.registerEvent(this.app.vault.on("create",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("modify",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("delete",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("rename",(t,e)=>this.handleFileChange(t,e)))}getIcon(){return"list-ordered"}onunload(){console.log("Novel Chapter Plugin unloaded"),this.app.workspace.detachLeavesOfType(C)}async loadSettings(){let t=await this.loadData();this.settings=JSON.parse(JSON.stringify(R)),Object.assign(this.settings,t),(!Array.isArray(this.settings.novelProjects)||this.settings.novelProjects.length===0)&&(this.settings.novelProjects=Array.isArray(g.novelProjects)&&g.novelProjects.length>0?JSON.parse(JSON.stringify(g.novelProjects)):[{id:`default-load-${Date.now()}`,name:"Default Novel",path:""}]),this.settings.novelProjects=this.settings.novelProjects.map(e=>({id:e.id||`generated-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,name:e.name||"Unnamed Novel",path:e.path||""})),this.settings.lastSelectedNovelId&&!this.settings.novelProjects.find(e=>e.id===this.settings.lastSelectedNovelId)&&(this.settings.lastSelectedNovelId=null),!this.settings.lastSelectedNovelId&&this.settings.novelProjects.length>0&&(this.settings.lastSelectedNovelId=this.settings.novelProjects[0].id)}async saveSettings(){await this.saveData(this.settings),this.refreshNovelChapterView(!0)}refreshNovelChapterView(t=!1){this.app.workspace.getLeavesOfType(C).forEach(e=>{e.view instanceof T&&e.view.updateView(t)})}async handleFileChange(t,e){if(!(t instanceof o.TFile)||t.extension&&t.extension!=="md")return;this.settings.novelProjects.some(s=>{if(!s.path||s.path.trim()==="")return!1;let a=(0,o.normalizePath)(s.path),i=(0,o.normalizePath)(t.path),h=e?(0,o.normalizePath)(e):null,l=i.startsWith(a+(a.endsWith("/")?"":"/")),d=h?h.startsWith(a+(a.endsWith("/")?"":"/")):!1;return l||d})&&(await B(100),this.refreshNovelChapterView(!1))}async activateView(){var n;let{workspace:t}=this.app,e=t.getLeavesOfType(C)[0];e||(e=(n=t.getRightLeaf(!1))!=null?n:t.getLeaf("split","vertical"),await e.setViewState({type:C,active:!0})),t.revealLeaf(e)}};
