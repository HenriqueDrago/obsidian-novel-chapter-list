/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var b=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var A=Object.prototype.hasOwnProperty;var O=(h,t)=>{for(var e in t)b(h,e,{get:t[e],enumerable:!0})},M=(h,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of $(t))!A.call(h,s)&&s!==e&&b(h,s,{get:()=>t[s],enumerable:!(n=V(t,s))||n.enumerable});return h};var H=h=>M(b({},"__esModule",{value:!0}),h);var U={};O(U,{default:()=>E});module.exports=H(U);var o=require("obsidian");var v=require("obsidian"),d={novelProjects:[{id:`default-${Date.now()}`,name:"My First Novel",path:"Novel/Chapters"}],propertyNameToChange:"status",propertyColumnHeader:"",propertyOptions:"To Do,In Progress,Drafted,Revised,Done",chapterTemplatePath:""};function z(){return`novel-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}var T=class extends v.PluginSettingTab{constructor(t,e){super(t,e),this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Novel Chapter Plugin Settings"}),t.createEl("h3",{text:"Chapter Properties & Template"}),new v.Setting(t).setName("Target Property Name").setDesc('The actual frontmatter key to update (e.g., "status", "outlineLevel"). This is case-sensitive.').addText(n=>n.setPlaceholder(d.propertyNameToChange).setValue(this.plugin.settings.propertyNameToChange).onChange(async s=>{this.plugin.settings.propertyNameToChange=s.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new v.Setting(t).setName("Property Column Header Display Name").setDesc('What title to display for the property column in the view (e.g., "Current Status"). If empty, it will use the "Target Property Name".').addText(n=>n.setPlaceholder("e.g., Status (optional)").setValue(this.plugin.settings.propertyColumnHeader).onChange(async s=>{this.plugin.settings.propertyColumnHeader=s.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new v.Setting(t).setName("Property Options").setDesc('Enter a comma-separated list of options for the dropdown (e.g., "To Do,In Progress,Complete").').addText(n=>n.setPlaceholder(d.propertyOptions).setValue(this.plugin.settings.propertyOptions).onChange(async s=>{this.plugin.settings.propertyOptions=s,await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new v.Setting(t).setName("Chapter Template File Path").setDesc('Path to a markdown file to use as a template for new chapters (e.g., "Templates/ChapterTemplate.md"). Leave empty to not use a template. Placeholders like {{title}} and {{date}} can be used in the template.').addText(n=>n.setPlaceholder(d.chapterTemplatePath||"e.g., Templates/ChapterTemplate.md").setValue(this.plugin.settings.chapterTemplatePath).onChange(async s=>{this.plugin.settings.chapterTemplatePath=s.trim(),await this.plugin.saveSettings()})),t.createEl("hr"),t.createEl("h3",{text:"Novel Projects"});let e=t.createDiv({cls:"novel-projects-container"});this.renderNovelProjects(e),new v.Setting(t).setName("Add New Novel Project").setDesc("Add a new novel to track.").addButton(n=>n.setButtonText("Add Novel").setCta().onClick(async()=>{this.plugin.settings.novelProjects.push({id:z(),name:`New Novel ${this.plugin.settings.novelProjects.length+1}`,path:""}),await this.plugin.saveSettings(),this.renderNovelProjects(e),this.plugin.refreshNovelChapterView(!0)}))}renderNovelProjects(t){t.empty(),this.plugin.settings.novelProjects.length===0&&t.createEl("p",{text:"No novel projects configured. Add one below."}),this.plugin.settings.novelProjects.forEach((e,n)=>{let s=new v.Setting(t).setName(`Novel ${n+1}`).setDesc(`Configuration for ${e.name||"this novel"}.`);s.addText(l=>l.setPlaceholder("Novel Name (e.g., My Epic Saga)").setValue(e.name).onChange(async a=>{e.name=a.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView(!0)})),s.addText(l=>l.setPlaceholder("Folder Path (e.g., Novels/MyEpicSaga/Chapters)").setValue(e.path).onChange(async a=>{e.path=a.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView(!0)})),s.addButton(l=>l.setIcon("trash").setTooltip("Remove this novel project").onClick(async()=>{this.plugin.settings.novelProjects.splice(n,1),await this.plugin.saveSettings(),this.renderNovelProjects(t),this.plugin.refreshNovelChapterView(!0)}))})}};var C="novel-chapter-view",W={...d,lastSelectedNovelId:null,novelProjects:Array.isArray(d.novelProjects)&&d.novelProjects.length>0?d.novelProjects:[{id:`default-${Date.now()}`,name:"My First Novel",path:"Novel/Chapters"}]};function R(h,t){if(!t||t.trim()==="")return!1;let e=(0,o.normalizePath)(h.path),n=(0,o.normalizePath)(t);return n.endsWith("/")||(n+="/"),e.startsWith(n)}var B=h=>new Promise(t=>setTimeout(t,h)),D=class extends o.Modal{constructor(e,n){super(e);this.result=null;this.onSubmit=n}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"Enter New Chapter Name"});let n=e.createDiv({cls:"modal-input-container"}),s=new o.TextComponent(n).setPlaceholder("Chapter name");s.inputEl.addClass("modal-text-input"),s.inputEl.focus();let l=e.createDiv({cls:"modal-button-container"});new o.ButtonComponent(l).setButtonText("Create Chapter").setCta().onClick(()=>{let a=s.getValue().trim();a?(this.result=a,this.close(),this.onSubmit(this.result)):new o.Notice("Chapter name cannot be empty.")}),new o.ButtonComponent(l).setButtonText("Cancel").onClick(()=>{this.close()}),s.inputEl.addEventListener("keypress",a=>{if(a.key==="Enter"){a.preventDefault();let p=s.getValue().trim();p?(this.result=p,this.close(),this.onSubmit(this.result)):new o.Notice("Chapter name cannot be empty.")}})}onClose(){let{contentEl:e}=this;e.empty()}},j=class extends o.ItemView{constructor(e,n){super(e);this.selectedNovelProjectId=null;this.plugin=n}getViewType(){return C}getDisplayText(){let e=this.plugin.settings.novelProjects.find(n=>n.id===this.selectedNovelProjectId);return e?`Chapters: ${e.name}`:"Novel Chapters"}getIcon(){return"list-ordered"}async onOpen(){let e=this.containerEl.children[1];e.empty(),e.addClass("novel-chapter-view-container"),this.controlsContainer=e.createDiv({cls:"novel-chapter-controls"}),this.tableContainer=e.createDiv({cls:"novel-chapter-table-container"}),await this.updateView(!0)}async onClose(){}async updateView(e=!1){if(e&&await this.renderControls(),!this.selectedNovelProjectId||!this.plugin.settings.novelProjects.find(n=>n.id===this.selectedNovelProjectId)){this.plugin.settings.lastSelectedNovelId&&this.plugin.settings.novelProjects.find(s=>s.id===this.plugin.settings.lastSelectedNovelId)?this.selectedNovelProjectId=this.plugin.settings.lastSelectedNovelId:this.plugin.settings.novelProjects.length>0?this.selectedNovelProjectId=this.plugin.settings.novelProjects[0].id:this.selectedNovelProjectId=null;let n=this.controlsContainer.querySelector("select.novel-project-selector");n&&this.selectedNovelProjectId?n.value=this.selectedNovelProjectId:n&&!this.selectedNovelProjectId&&this.plugin.settings.novelProjects.length>0&&(n.value=this.plugin.settings.novelProjects[0].id)}this.updateLeafDisplayText(),await this.renderChapterTable()}updateLeafDisplayText(){this.leaf&&this.leaf.setViewState(this.leaf.getViewState())}async renderControls(){this.controlsContainer.empty();let e=this.plugin.settings.novelProjects;if(e.length===0){this.controlsContainer.setText("No novel projects configured. Please add one in plugin settings."),this.selectedNovelProjectId=null;return}let n=this.controlsContainer.createDiv({cls:"novel-chapter-controls-line"}),s=n.createEl("select");s.addClass("novel-project-selector"),e.forEach(a=>{s.createEl("option",{text:a.name||"Unnamed Novel",value:a.id})}),this.selectedNovelProjectId&&e.find(a=>a.id===this.selectedNovelProjectId)?s.value=this.selectedNovelProjectId:e.length>0&&(this.selectedNovelProjectId=e[0].id,s.value=this.selectedNovelProjectId),s.addEventListener("change",async a=>{this.selectedNovelProjectId=a.target.value,this.plugin.settings.lastSelectedNovelId=this.selectedNovelProjectId,await this.plugin.saveSettings(),this.updateLeafDisplayText(),await this.renderChapterTable()}),n.createEl("button",{text:"+ New Chapter",cls:"novel-chapter-new-button"}).addEventListener("click",async()=>{console.log("New Chapter button clicked. Calling handleNewChapterClick..."),await this.handleNewChapterClick()})}async handleNewChapterClick(){if(console.log("handleNewChapterClick started."),!this.selectedNovelProjectId){console.log("No novel project selected. Aborting."),new o.Notice("Please select a novel project first.");return}console.log("Selected Novel Project ID:",this.selectedNovelProjectId);let e=this.plugin.settings.novelProjects.find(n=>n.id===this.selectedNovelProjectId);if(!e||!e.path||e.path.trim()===""){console.log("Current novel project is invalid or has no path. Aborting.",e),new o.Notice("The selected novel project does not have a valid folder path configured.");return}console.log("Current Novel Project:",e),new D(this.app,async n=>{if(console.log("Chapter name from modal:",n),!n||n.trim()===""){console.log("Chapter name is empty after modal. Aborting.");return}let s=n.replace(/[\\/:*?"<>|]/g,"").trim();if(console.log("Sanitized file name:",s),s===""){console.log("Sanitized file name is empty. Aborting."),new o.Notice("Invalid chapter name (results in empty filename after sanitization).");return}let l=(0,o.normalizePath)(e.path);console.log("Normalized folder path:",l);try{let c=await this.app.vault.adapter.exists(l);if(console.log("Does folder exist?",c),!c){console.log("Folder does not exist. Aborting."),new o.Notice(`Novel project folder "${l}" does not exist. Please create it or check settings.`);return}}catch(c){console.error("Error checking project folder:",c),new o.Notice(`Error checking project folder: ${c.message}`);return}let a=(0,o.normalizePath)(`${l}/${s}.md`);console.log("Full file path for new chapter:",a);let p=await this.app.vault.adapter.exists(a);if(console.log("Does file already exist?",p),p){console.log("File already exists. Aborting."),new o.Notice(`A chapter named "${s}.md" already exists in this novel.`);return}let r="",g=this.plugin.settings.chapterTemplatePath;if(console.log("Chapter template path from settings:",g),g&&g.trim()!==""){let c=(0,o.normalizePath)(g);console.log("Normalized template path:",c);try{let u=this.app.vault.getAbstractFileByPath(c);if(u instanceof o.TFile){console.log("Template file found:",u.path),r=await this.app.vault.read(u),console.log("Raw template content read."),r=r.replace(/\{\{title\}\}/gi,n),r=r.replace(/\{\{TITLE\}\}/gi,n);let P=new Date,w=P.getFullYear(),i=String(P.getMonth()+1).padStart(2,"0"),m=String(P.getDate()).padStart(2,"0"),S=`${w}-${i}-${m}`;r=r.replace(/\{\{date\}\}/gi,S),r=r.replace(/\{\{DATE\}\}/gi,S),console.log("Template content after placeholder replacement.")}else console.log("Template file not found or is not a TFile at path:",c),new o.Notice(`Chapter template file not found at "${c}". Creating a default chapter.`)}catch(u){console.error("Error reading chapter template:",u),new o.Notice("Error reading template. Creating a default chapter. Check console.")}}if(r===""){console.log("No template content, creating default chapter content.");let{propertyNameToChange:c}=this.plugin.settings,u="";r=`---
`,r+=`title: ${n}
`,c&&(r+=`${c}: "${u}"
`),r+=`---

# ${n}

`}console.log("Final content for new file:",r);try{console.log("Attempting to create file..."),await this.app.vault.create(a,r),console.log("File creation successful."),new o.Notice(`Chapter "${n}" created successfully.`)}catch(c){console.error("Error creating new chapter in vault.create:",c),new o.Notice("Failed to create new chapter. Check console for details.")}console.log("Async operation inside modal callback finished.")}).open(),console.log("handleNewChapterClick finished (modal has been opened).")}async renderChapterTable(){var w;if(this.tableContainer.empty(),!this.selectedNovelProjectId)return;let e=this.plugin.settings.novelProjects.find(i=>i.id===this.selectedNovelProjectId);if(!e){this.tableContainer.setText("Selected novel project not found. It might have been deleted.");return}let{path:n}=e,{propertyNameToChange:s,propertyColumnHeader:l,propertyOptions:a}=this.plugin.settings,p=a.split(",").map(i=>i.trim()).filter(i=>i.length>0);if(!n||n.trim()===""){this.tableContainer.setText(`The selected novel project "${e.name||"Unnamed Novel"}" does not have a folder path configured.`);return}let g=this.app.vault.getMarkdownFiles().filter(i=>R(i,n));if(g.length===0){this.tableContainer.setText(`No chapters found in "${n}" for novel "${e.name||"Unnamed Novel"}".`);return}g.sort((i,m)=>i.path.localeCompare(m.path));let c=this.tableContainer.createEl("table",{cls:"novel-chapter-table"}),u=c.createEl("thead").createEl("tr");if(u.createEl("th",{text:"Chapter"}),s&&p.length>0){let i=l&&l.trim()!==""?l:s;u.createEl("th",{text:i})}let P=c.createEl("tbody");for(let i of g){let m=P.createEl("tr");if(m.createEl("td").createEl("a",{text:i.basename,href:"#",cls:"internal-link"}).addEventListener("click",F=>{F.preventDefault(),this.app.workspace.openLinkText(i.path,"",!1)}),s&&p.length>0){let I=m.createEl("td").createEl("select"),x=this.app.metadataCache.getFileCache(i),k=((w=x==null?void 0:x.frontmatter)==null?void 0:w[s])||"",L=I.createEl("option",{text:"--- Select ---",value:""});k||(L.selected=!0),p.forEach(N=>{let f=I.createEl("option",{text:N,value:N});N===k&&(f.selected=!0)}),I.addEventListener("change",async N=>{let f=N.target.value;try{await this.app.fileManager.processFrontMatter(i,y=>{f===""?delete y[s]:y[s]=f}),new o.Notice(`Chapter '${i.basename}' ${s} updated to '${f===""?"cleared":f}'.`)}catch(y){console.error(`Error updating frontmatter for ${i.path}:`,y),new o.Notice(`Failed to update ${s} for ${i.basename}.`)}})}}}},E=class extends o.Plugin{async onload(){console.log("Novel Chapter Plugin loaded"),await this.loadSettings(),this.addSettingTab(new T(this.app,this)),this.registerView(C,t=>new j(t,this)),this.addCommand({id:"open-novel-chapter-view",name:"Open Novel Chapter View",callback:()=>this.activateView()}),this.addRibbonIcon(this.getIcon(),"Open Novel Chapter View",()=>this.activateView()),this.registerEvent(this.app.vault.on("create",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("modify",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("delete",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("rename",(t,e)=>this.handleFileChange(t,e)))}getIcon(){return"list-ordered"}onunload(){console.log("Novel Chapter Plugin unloaded"),this.app.workspace.detachLeavesOfType(C)}async loadSettings(){let t=await this.loadData();this.settings=JSON.parse(JSON.stringify(W)),Object.assign(this.settings,t),(!Array.isArray(this.settings.novelProjects)||this.settings.novelProjects.length===0)&&(this.settings.novelProjects=Array.isArray(d.novelProjects)&&d.novelProjects.length>0?JSON.parse(JSON.stringify(d.novelProjects)):[{id:`default-load-${Date.now()}`,name:"Default Novel",path:""}]),this.settings.novelProjects=this.settings.novelProjects.map(e=>({id:e.id||`generated-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,name:e.name||"Unnamed Novel",path:e.path||""})),this.settings.lastSelectedNovelId&&!this.settings.novelProjects.find(e=>e.id===this.settings.lastSelectedNovelId)&&(this.settings.lastSelectedNovelId=null),!this.settings.lastSelectedNovelId&&this.settings.novelProjects.length>0&&(this.settings.lastSelectedNovelId=this.settings.novelProjects[0].id)}async saveSettings(){await this.saveData(this.settings),this.refreshNovelChapterView(!0)}refreshNovelChapterView(t=!1){this.app.workspace.getLeavesOfType(C).forEach(e=>{e.view instanceof j&&e.view.updateView(t)})}async handleFileChange(t,e){if(!(t instanceof o.TFile)||t.extension&&t.extension!=="md")return;this.settings.novelProjects.some(s=>{if(!s.path||s.path.trim()==="")return!1;let l=(0,o.normalizePath)(s.path),a=(0,o.normalizePath)(t.path),p=e?(0,o.normalizePath)(e):null,r=a.startsWith(l+(l.endsWith("/")?"":"/")),g=p?p.startsWith(l+(l.endsWith("/")?"":"/")):!1;return r||g})&&(await B(100),this.refreshNovelChapterView(!1))}async activateView(){var n;let{workspace:t}=this.app,e=t.getLeavesOfType(C)[0];e||(e=(n=t.getRightLeaf(!1))!=null?n:t.getLeaf("split","vertical"),await e.setViewState({type:C,active:!0})),t.revealLeaf(e)}};
