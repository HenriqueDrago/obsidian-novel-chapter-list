/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var S=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var A=Object.prototype.hasOwnProperty;var $=(r,t)=>{for(var e in t)S(r,e,{get:t[e],enumerable:!0})},O=(r,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of L(t))!A.call(r,n)&&n!==e&&S(r,n,{get:()=>t[n],enumerable:!(s=k(t,n))||s.enumerable});return r};var M=r=>O(S({},"__esModule",{value:!0}),r);var B={};$(B,{default:()=>j});module.exports=M(B);var o=require("obsidian");var g=require("obsidian"),p={novelProjects:[{id:`default-${Date.now()}`,name:"My First Novel",path:"Novel/Chapters"}],propertyNameToChange:"status",propertyColumnHeader:"",propertyOptions:"To Do,In Progress,Drafted,Revised,Done"};function H(){return`novel-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}var w=class extends g.PluginSettingTab{constructor(t,e){super(t,e),this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Novel Chapter Plugin Settings"}),t.createEl("h3",{text:"Chapter Properties"}),new g.Setting(t).setName("Target Property Name").setDesc('The actual frontmatter key to update (e.g., "status", "outlineLevel"). This is case-sensitive.').addText(s=>s.setPlaceholder(p.propertyNameToChange).setValue(this.plugin.settings.propertyNameToChange).onChange(async n=>{this.plugin.settings.propertyNameToChange=n.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new g.Setting(t).setName("Property Column Header Display Name").setDesc('What title to display for the property column in the view (e.g., "Current Status"). If empty, it will use the "Target Property Name".').addText(s=>s.setPlaceholder("e.g., Status (optional)").setValue(this.plugin.settings.propertyColumnHeader).onChange(async n=>{this.plugin.settings.propertyColumnHeader=n.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),new g.Setting(t).setName("Property Options").setDesc('Enter a comma-separated list of options for the dropdown (e.g., "To Do,In Progress,Complete").').addText(s=>s.setPlaceholder(p.propertyOptions).setValue(this.plugin.settings.propertyOptions).onChange(async n=>{this.plugin.settings.propertyOptions=n,await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),t.createEl("hr"),t.createEl("h3",{text:"Novel Projects"});let e=t.createDiv({cls:"novel-projects-container"});this.renderNovelProjects(e),new g.Setting(t).setName("Add New Novel Project").setDesc("Add a new novel to track.").addButton(s=>s.setButtonText("Add Novel").setCta().onClick(async()=>{this.plugin.settings.novelProjects.push({id:H(),name:`New Novel ${this.plugin.settings.novelProjects.length+1}`,path:""}),await this.plugin.saveSettings(),this.renderNovelProjects(e),this.plugin.refreshNovelChapterView()}))}renderNovelProjects(t){t.empty(),this.plugin.settings.novelProjects.length===0&&t.createEl("p",{text:"No novel projects configured. Add one below."}),this.plugin.settings.novelProjects.forEach((e,s)=>{let n=new g.Setting(t).setName(`Novel ${s+1}`).setDesc(`Configuration for ${e.name||"this novel"}.`);n.addText(l=>l.setPlaceholder("Novel Name (e.g., My Epic Saga)").setValue(e.name).onChange(async i=>{e.name=i.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),n.addText(l=>l.setPlaceholder("Folder Path (e.g., Novels/MyEpicSaga/Chapters)").setValue(e.path).onChange(async i=>{e.path=i.trim(),await this.plugin.saveSettings(),this.plugin.refreshNovelChapterView()})),n.addButton(l=>l.setIcon("trash").setTooltip("Remove this novel project").onClick(async()=>{this.plugin.settings.novelProjects.splice(s,1),await this.plugin.saveSettings(),this.renderNovelProjects(t),this.plugin.refreshNovelChapterView()}))})}};var f="novel-chapter-view",z={...p,lastSelectedNovelId:null,novelProjects:Array.isArray(p.novelProjects)&&p.novelProjects.length>0?p.novelProjects:[{id:`default-${Date.now()}`,name:"My First Novel",path:"Novel/Chapters"}]};function W(r,t){if(!t||t.trim()==="")return!1;let e=(0,o.normalizePath)(r.path),s=(0,o.normalizePath)(t);return s.endsWith("/")||(s+="/"),e.startsWith(s)}var R=r=>new Promise(t=>setTimeout(t,r)),I=class extends o.Modal{constructor(e,s){super(e);this.result=null;this.onSubmit=s}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"Enter New Chapter Name"});let s=e.createDiv({cls:"modal-input-container"}),n=new o.TextComponent(s).setPlaceholder("Chapter name");n.inputEl.addClass("modal-text-input"),n.inputEl.focus();let l=e.createDiv({cls:"modal-button-container"});new o.ButtonComponent(l).setButtonText("Create Chapter").setCta().onClick(()=>{let i=n.getValue().trim();i?(this.result=i,this.close(),this.onSubmit(this.result)):new o.Notice("Chapter name cannot be empty.")}),new o.ButtonComponent(l).setButtonText("Cancel").onClick(()=>{this.close()}),n.inputEl.addEventListener("keypress",i=>{if(i.key==="Enter"){i.preventDefault();let c=n.getValue().trim();c?(this.result=c,this.close(),this.onSubmit(this.result)):new o.Notice("Chapter name cannot be empty.")}})}onClose(){let{contentEl:e}=this;e.empty()}},y=class extends o.ItemView{constructor(e,s){super(e);this.selectedNovelProjectId=null;this.plugin=s}getViewType(){return f}getDisplayText(){let e=this.plugin.settings.novelProjects.find(s=>s.id===this.selectedNovelProjectId);return e?`Chapters: ${e.name}`:"Novel Chapters"}getIcon(){return"list-ordered"}async onOpen(){let e=this.containerEl.children[1];e.empty(),e.addClass("novel-chapter-view-container"),this.controlsContainer=e.createDiv({cls:"novel-chapter-controls"}),this.tableContainer=e.createDiv({cls:"novel-chapter-table-container"}),await this.updateView(!0)}async onClose(){}async updateView(e=!1){if(e&&await this.renderControls(),!this.selectedNovelProjectId||!this.plugin.settings.novelProjects.find(s=>s.id===this.selectedNovelProjectId)){this.plugin.settings.lastSelectedNovelId&&this.plugin.settings.novelProjects.find(n=>n.id===this.plugin.settings.lastSelectedNovelId)?this.selectedNovelProjectId=this.plugin.settings.lastSelectedNovelId:this.plugin.settings.novelProjects.length>0?this.selectedNovelProjectId=this.plugin.settings.novelProjects[0].id:this.selectedNovelProjectId=null;let s=this.controlsContainer.querySelector("select.novel-project-selector");s&&this.selectedNovelProjectId?s.value=this.selectedNovelProjectId:s&&!this.selectedNovelProjectId&&this.plugin.settings.novelProjects.length>0&&(s.value=this.plugin.settings.novelProjects[0].id)}this.updateLeafDisplayText(),await this.renderChapterTable()}updateLeafDisplayText(){this.leaf&&this.leaf.setViewState(this.leaf.getViewState())}async renderControls(){this.controlsContainer.empty();let e=this.plugin.settings.novelProjects;if(e.length===0){this.controlsContainer.setText("No novel projects configured. Please add one in plugin settings."),this.selectedNovelProjectId=null;return}let s=this.controlsContainer.createDiv({cls:"novel-chapter-controls-line"}),n=s.createEl("select");n.addClass("novel-project-selector"),e.forEach(i=>{n.createEl("option",{text:i.name||"Unnamed Novel",value:i.id})}),this.selectedNovelProjectId&&e.find(i=>i.id===this.selectedNovelProjectId)?n.value=this.selectedNovelProjectId:e.length>0&&(this.selectedNovelProjectId=e[0].id,n.value=this.selectedNovelProjectId),n.addEventListener("change",async i=>{this.selectedNovelProjectId=i.target.value,this.plugin.settings.lastSelectedNovelId=this.selectedNovelProjectId,await this.plugin.saveSettings(),this.updateLeafDisplayText(),await this.renderChapterTable()}),s.createEl("button",{text:"+ New Chapter",cls:"novel-chapter-new-button"}).addEventListener("click",async()=>{console.log("New Chapter button clicked. Calling handleNewChapterClick..."),await this.handleNewChapterClick()})}async handleNewChapterClick(){if(console.log("handleNewChapterClick started."),!this.selectedNovelProjectId){console.log("No novel project selected. Aborting."),new o.Notice("Please select a novel project first.");return}console.log("Selected Novel Project ID:",this.selectedNovelProjectId);let e=this.plugin.settings.novelProjects.find(s=>s.id===this.selectedNovelProjectId);if(!e||!e.path||e.path.trim()===""){console.log("Current novel project is invalid or has no path. Aborting.",e),new o.Notice("The selected novel project does not have a valid folder path configured.");return}console.log("Current Novel Project:",e),new I(this.app,async s=>{if(console.log("Chapter name from modal:",s),!s||s.trim()===""){console.log("Chapter name is empty after modal. Aborting.");return}let n=s.replace(/[\\/:*?"<>|]/g,"").trim();if(console.log("Sanitized file name:",n),n===""){console.log("Sanitized file name is empty. Aborting."),new o.Notice("Invalid chapter name (results in empty filename after sanitization).");return}let l=(0,o.normalizePath)(e.path);console.log("Normalized folder path:",l);try{let h=await this.app.vault.adapter.exists(l);if(console.log("Does folder exist?",h),!h){console.log("Folder does not exist. Aborting."),new o.Notice(`Novel project folder "${l}" does not exist. Please create it or check settings.`);return}}catch(h){console.error("Error checking project folder:",h),new o.Notice(`Error checking project folder: ${h.message}`);return}let i=(0,o.normalizePath)(`${l}/${n}.md`);console.log("Full file path for new chapter:",i);let c=await this.app.vault.adapter.exists(i);if(console.log("Does file already exist?",c),c){console.log("File already exists. Aborting."),new o.Notice(`A chapter named "${n}.md" already exists in this novel.`);return}let{propertyNameToChange:m}=this.plugin.settings,v="",d=`---
`;d+=`title: ${s}
`,m&&(d+=`${m}: "${v}"
`),d+=`---

# ${s}

`,console.log("Content for new file:",d);try{console.log("Attempting to create file..."),await this.app.vault.create(i,d),console.log("File creation successful."),new o.Notice(`Chapter "${s}" created successfully.`)}catch(h){console.error("Error creating new chapter in vault.create:",h),new o.Notice("Failed to create new chapter. Check console for details.")}console.log("Async operation inside modal callback finished.")}).open(),console.log("handleNewChapterClick finished (modal has been opened).")}async renderChapterTable(){var x;if(this.tableContainer.empty(),!this.selectedNovelProjectId)return;let e=this.plugin.settings.novelProjects.find(a=>a.id===this.selectedNovelProjectId);if(!e){this.tableContainer.setText("Selected novel project not found. It might have been deleted.");return}let{path:s}=e,{propertyNameToChange:n,propertyColumnHeader:l,propertyOptions:i}=this.plugin.settings,c=i.split(",").map(a=>a.trim()).filter(a=>a.length>0);if(!s||s.trim()===""){this.tableContainer.setText(`The selected novel project "${e.name||"Unnamed Novel"}" does not have a folder path configured.`);return}let v=this.app.vault.getMarkdownFiles().filter(a=>W(a,s));if(v.length===0){this.tableContainer.setText(`No chapters found in "${s}" for novel "${e.name||"Unnamed Novel"}".`);return}v.sort((a,N)=>a.path.localeCompare(N.path));let d=this.tableContainer.createEl("table",{cls:"novel-chapter-table"}),h=d.createEl("thead").createEl("tr");if(h.createEl("th",{text:"Chapter"}),n&&c.length>0){let a=l&&l.trim()!==""?l:n;h.createEl("th",{text:a})}let F=d.createEl("tbody");for(let a of v){let N=F.createEl("tr");if(N.createEl("td").createEl("a",{text:a.basename,href:"#",cls:"internal-link"}).addEventListener("click",b=>{b.preventDefault(),this.app.workspace.openLinkText(a.path,"",!1)}),n&&c.length>0){let E=N.createEl("td").createEl("select"),T=this.app.metadataCache.getFileCache(a),D=((x=T==null?void 0:T.frontmatter)==null?void 0:x[n])||"",V=E.createEl("option",{text:"--- Select ---",value:""});D||(V.selected=!0),c.forEach(C=>{let u=E.createEl("option",{text:C,value:C});C===D&&(u.selected=!0)}),E.addEventListener("change",async C=>{let u=C.target.value;try{await this.app.fileManager.processFrontMatter(a,P=>{u===""?delete P[n]:P[n]=u}),new o.Notice(`Chapter '${a.basename}' ${n} updated to '${u===""?"cleared":u}'.`)}catch(P){console.error(`Error updating frontmatter for ${a.path}:`,P),new o.Notice(`Failed to update ${n} for ${a.basename}.`)}})}}}},j=class extends o.Plugin{async onload(){console.log("Novel Chapter Plugin loaded"),await this.loadSettings(),this.addSettingTab(new w(this.app,this)),this.registerView(f,t=>new y(t,this)),this.addCommand({id:"open-novel-chapter-view",name:"Open Novel Chapter View",callback:()=>this.activateView()}),this.addRibbonIcon(this.getIcon(),"Open Novel Chapter View",()=>this.activateView()),this.registerEvent(this.app.vault.on("create",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("modify",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("delete",t=>this.handleFileChange(t))),this.registerEvent(this.app.vault.on("rename",(t,e)=>this.handleFileChange(t,e)))}getIcon(){return"list-ordered"}onunload(){console.log("Novel Chapter Plugin unloaded"),this.app.workspace.detachLeavesOfType(f)}async loadSettings(){let t=await this.loadData();this.settings=JSON.parse(JSON.stringify(z)),Object.assign(this.settings,t),(!Array.isArray(this.settings.novelProjects)||this.settings.novelProjects.length===0)&&(this.settings.novelProjects=Array.isArray(p.novelProjects)&&p.novelProjects.length>0?JSON.parse(JSON.stringify(p.novelProjects)):[{id:`default-load-${Date.now()}`,name:"Default Novel",path:""}]),this.settings.novelProjects=this.settings.novelProjects.map(e=>({id:e.id||`generated-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,name:e.name||"Unnamed Novel",path:e.path||""})),this.settings.lastSelectedNovelId&&!this.settings.novelProjects.find(e=>e.id===this.settings.lastSelectedNovelId)&&(this.settings.lastSelectedNovelId=null),!this.settings.lastSelectedNovelId&&this.settings.novelProjects.length>0&&(this.settings.lastSelectedNovelId=this.settings.novelProjects[0].id)}async saveSettings(){await this.saveData(this.settings),this.refreshNovelChapterView(!0)}refreshNovelChapterView(t=!1){this.app.workspace.getLeavesOfType(f).forEach(e=>{e.view instanceof y&&e.view.updateView(t)})}async handleFileChange(t,e){if(!(t instanceof o.TFile)||t.extension&&t.extension!=="md")return;this.settings.novelProjects.some(n=>{if(!n.path||n.path.trim()==="")return!1;let l=(0,o.normalizePath)(n.path),i=(0,o.normalizePath)(t.path),c=e?(0,o.normalizePath)(e):null,m=i.startsWith(l+(l.endsWith("/")?"":"/")),v=c?c.startsWith(l+(l.endsWith("/")?"":"/")):!1;return m||v})&&(await R(100),this.refreshNovelChapterView(!1))}async activateView(){var s;let{workspace:t}=this.app,e=t.getLeavesOfType(f)[0];e||(e=(s=t.getRightLeaf(!1))!=null?s:t.getLeaf("split","vertical"),await e.setViewState({type:f,active:!0})),t.revealLeaf(e)}};
